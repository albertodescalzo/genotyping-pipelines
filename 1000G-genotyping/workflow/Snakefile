include: 'rules/leave-one-out.smk'
include: 'rules/population-typing.smk'
include: 'rules/population-evaluation.smk'


sources = [s for s in config['graph_vcf'].keys()]
print('Running evaluation of sources: ', sources)

rule all:
	input:
		# leave-one-out results
		expand("results/leave-one-out/{source}/plots/{metric}/pangenie/{metric}_{strat}.pdf", source=sources, metric=['concordance', 'precision-recall-typable'], strat=['graph']),

		# population genotyping
		expand( "results/population-typing/{source}/multi_all_filelist.tsv", source=sources),
		expand("results/population-typing/{source}/merged-vcfs/filtered/all-samples_bi_all_{filter}.vcf.gz", source=sources, filter=["unfiltered", "lenient", "strict"]),
		expand("results/population-typing/{source}/merged-vcfs/whole-genome/all-samples_{what}.vcf.gz", source=sources, what=["bi_nosnvs", "bi_all"]),
		expand("results/population-typing/{source}/evaluation/statistics/plot_bi_all_filters.tsv", source=sources)


rule leave_one_out:
	input:
		# leave-one-out results
		expand("results/leave-one-out/{source}/plots/{metric}/pangenie/{metric}_{strat}.pdf", source=sources, metric=['concordance', 'precision-recall-typable'], strat=['graph']),


rule population_typing:
	input:
		# population genotyping
		expand( "results/population-typing/{source}/multi_all_filelist.tsv", source=sources),
		expand("results/population-typing/{source}/merged-vcfs/filtered/all-samples_bi_all_{filter}.vcf.gz", source=sources, filter=["unfiltered", "lenient", "strict"]),
		expand("results/population-typing/{source}/merged-vcfs/whole-genome/all-samples_{what}.vcf.gz", source=sources, what=["bi_nosnvs", "bi_all"]),
		expand("results/population-typing/{source}/evaluation/statistics/plot_bi_all_filters.tsv", source=sources)
